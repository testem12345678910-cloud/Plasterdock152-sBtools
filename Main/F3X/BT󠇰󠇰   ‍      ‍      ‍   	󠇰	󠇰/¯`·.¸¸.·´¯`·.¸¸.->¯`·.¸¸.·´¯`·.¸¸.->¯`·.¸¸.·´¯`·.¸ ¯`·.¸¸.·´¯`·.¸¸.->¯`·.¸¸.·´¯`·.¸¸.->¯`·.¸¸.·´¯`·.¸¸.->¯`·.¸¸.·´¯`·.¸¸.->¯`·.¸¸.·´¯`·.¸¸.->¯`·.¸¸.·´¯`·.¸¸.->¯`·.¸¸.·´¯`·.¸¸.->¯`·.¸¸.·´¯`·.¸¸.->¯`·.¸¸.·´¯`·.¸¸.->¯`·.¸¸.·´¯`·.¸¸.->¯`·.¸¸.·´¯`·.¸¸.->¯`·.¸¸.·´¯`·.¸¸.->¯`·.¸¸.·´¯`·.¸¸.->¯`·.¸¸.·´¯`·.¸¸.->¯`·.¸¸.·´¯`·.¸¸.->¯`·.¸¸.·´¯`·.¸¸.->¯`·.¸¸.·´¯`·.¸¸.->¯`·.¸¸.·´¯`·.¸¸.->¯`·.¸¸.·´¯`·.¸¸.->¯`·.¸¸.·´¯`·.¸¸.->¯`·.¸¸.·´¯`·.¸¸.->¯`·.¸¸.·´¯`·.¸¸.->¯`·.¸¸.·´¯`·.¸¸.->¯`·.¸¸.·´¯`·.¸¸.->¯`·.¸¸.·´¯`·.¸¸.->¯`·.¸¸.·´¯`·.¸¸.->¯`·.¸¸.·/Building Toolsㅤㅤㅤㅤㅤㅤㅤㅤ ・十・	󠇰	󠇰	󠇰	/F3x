--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.9) ~  Much Love, Ferib 

]]--

local v0 = game:GetObjects("rbxassetid://9797801917")[1];
v0.CanBeDropped = true;
v0.Parent = game:GetService("Players").LocalPlayer.Backpack;
local function v4(v5)
	local v6 = {};
	local v7 = {};
	local v8 = {};
	local v9 = {};
	local function v10(v13)
		if (typeof(v13) ~= "Instance") then
			warn("Unable to require: " .. tostring(v13));
			return;
		end
		if v7[v13] then
			return v7[v13];
		elseif v6[v13] then
			v7[v13] = v6[v13]();
			return v7[v13];
		end
		warn("Real requiring: " .. v13:GetFullName());
		return require(v13);
	end
	local function v11(v14, v15, v16)
		if not v15 then
			warn("SYNTAX ERROR (" .. v14:GetFullName() .. "): " .. (v16 or "Unknown"));
		end
		local v17 = {script=v14};
		local v18 = {};
		v18.__index = function(v23, v24)
			if (v24 == "require") then
				return v10;
			end
			if (v24 == "getfenv") then
				return function(v29)
					local v30 = type(v29);
					local v31;
					if (v30 == "number") then
						v31 = getfenv(((v29 == 0) and 2) or (v29 + 1));
					else
						v31 = getfenv(v29);
					end
					if (v31.script == nil) then
						error("Tried to get main envirionment");
					end
					return v31;
				end;
			end
			return getfenv()[v24];
		end;
		return setfenv(v15, setmetatable(v17, v18));
	end
	local function v12(v20)
		if (v20:IsA("Script") or (v20.ClassName == "ModuleScript")) then
			local v27 = v11(v20, loadstring(v20.Source, "=" .. v20:GetFullName()));
			if ((v20.ClassName == "Script") or (v20.ClassName == "LocalScript")) then
				v8[v20] = v27;
			elseif (v20.ClassName == "ModuleScript") then
				v6[v20] = v27;
			end
		end
		for v25, v26 in pairs(v20:GetChildren()) do
			v12(v26);
		end
	end
	v12(v5);
	for v21, v22 in pairs(v8) do
		task.spawn(v22);
	end
end
v4(v0);		end
		local fakeEnv = {script=Script};
		local meta = {};
		meta.__index = function(self, index)
			if (index == "require") then
				return fakeRequire;
			end
			if (index == "getfenv") then
				return function(arg)
					local typ = type(arg);
					local env;
					if (typ == "number") then
						env = getfenv(((arg == 0) and 2) or (arg + 1));
					else
						env = getfenv(arg);
					end
					if (env.script == nil) then
						error("Tried to get main envirionment");
					end
					return env;
				end;
			end
			return getfenv()[index];
		end;
		return setfenv(Func, setmetatable(fakeEnv, meta));
	end
	local function LoadScripts(Script)
		if (Script:IsA("Script") or (Script.ClassName == "ModuleScript")) then
			local func = NewProxyEnv(Script, loadstring(Script.Source, "=" .. Script:GetFullName()));
			if ((Script.ClassName == "Script") or (Script.ClassName == "LocalScript")) then
				Scripts[Script] = func;
			elseif (Script.ClassName == "ModuleScript") then
				Modules[Script] = func;
			end
		end
		for i, v in pairs(Script:GetChildren()) do
			LoadScripts(v);
		end
	end
	LoadScripts(Object);
	for i, v in pairs(Scripts) do
		task.spawn(v);
	end
end
Load(f3x);
